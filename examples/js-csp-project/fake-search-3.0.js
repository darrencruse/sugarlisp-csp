// Generated by SugarLisp v0.6.5
var csp = require("js-csp");
var chan = csp.chan;
var timeout = csp.timeout;
var alts = csp.alts;

function fakeSearch(kind) {
  return function*(query) {
    yield csp.take(timeout((Math.random() * 200)));
    return [kind, " result for query ", query].join('');
  };
}

var web1 = fakeSearch("web1");
var web2 = fakeSearch("web2");
var image1 = fakeSearch("image1");
var image2 = fakeSearch("image2");
var video1 = fakeSearch("video1");
var video2 = fakeSearch("video2");

function* firstSearchResult(query, replicas) {
  var ch = chan();

  function* searchReplica(i) {
    var replicaFn = replicas[i];
    return yield csp.put(ch, (yield * replicaFn(query)));
  }
  for (var i = 0;
    (i < replicas.length); i++) {
    csp.go(searchReplica, [i]);
  };
  return (yield csp.take(ch));
}

function* google(query) {
  var ch = chan();

  csp.go(function*() {
    return yield csp.put(ch, (yield * firstSearchResult(query, [
      web1,
      web2
    ])));

  });
  csp.go(function*() {
    return yield csp.put(ch, (yield * firstSearchResult(query, [
      image1,
      image2
    ])));

  });
  csp.go(function*() {
    return yield csp.put(ch, (yield * firstSearchResult(query, [
      video1,
      video2
    ])));

  });

  var t = timeout(80);

  var results = [];
  for (var i = 0;
    (i < 3); ++i) {
    var r = yield csp.alts([
      ch,
      t
    ]);
    if ((r.channel === ch)) {
      results.push(r.value);
    } else {
      console.log("timed out");
      break;
    };
  };

  return results;
}

csp.go(function*() {
  var start = new Date();
  var results = yield * google("PLT");
  var elapsed = ((new Date()) - start);
  console.log(results.join("\n"));
  console.log(elapsed);

});